plugins {
    id 'org.springframework.boot' version '2.2.0.M1'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.lyc'
version = '1.0.0'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

static def isWindows() {
    return System.properties['os.name'].toString().toUpperCase().contains('WINDOWS')
}

static def isProduction() {
    def sys = System.properties['os.name'].toString().toUpperCase()
    return (!sys.contains("WINDOWS") && !sys.contains("MAC"))
}

sourceSets {

    if (isProduction()) {
        main {
            resources {
                srcDirs = ['src/main/resource_prod']
            }
        }
    } else if (!isWindows()) {
        main {
            resources {
                srcDirs = ['src/main/resource_mac']
            }
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'


    if (isWindows()) {
        implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    } else {
        implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
    }
    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
